plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'com.diffplug.spotless' version '6.23.3'
}

group 'com.qxam'
version '0.3.0-SNAPSHOT'

ext.isCi = System.getProperty('CI_JOB_ID') != null
println "isCI: $isCi"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:4.16.1'
    implementation 'com.codeborne:selenide:7.0.4'
    implementation 'org.slf4j:slf4j-reload4j:2.0.9'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.6.2'
    implementation 'org.aeonbits.owner:owner:1.0.12'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'io.qameta.allure:allure-junit5:2.25.0'
    implementation 'io.qameta.allure:allure-selenide:2.25.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.20.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

processResources {
    filesMatching('**/application.properties') {
        expand(browserType: project.hasProperty('browserType') ? project.browserType : 'CHROME')
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

if (!isCi) {
    spotless {
        java {
            target 'src/*/java/**'
            removeUnusedImports()
            googleJavaFormat()
        }
    }

    project.afterEvaluate {
        compileJava.dependsOn('spotlessApply')
    }
}